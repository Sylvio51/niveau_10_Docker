name: CI Python Docker URL Param # Nom de la pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape de construction de l'image Docker
      - name: Build Docker image
        run: docker build -t myapp-ci:${{ github.sha }} .

      # Étape d'exécution des tests DANS l'image construite
      - name: Run tests inside Docker image
        run: docker run --rm myapp-ci:${{ github.sha }} pytest

  build_and_push_docker:
    # Job name that shows in the GitHub UI
    name: Build Docker Images
    # Runner to use
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      # Récupèrele contenu du git
      - name: Checkout
        uses: actions/checkout@v4

  # Étape de construction de l'image Docker Stable
      - name: Build Docker Stable image
        run: docker build -t dfs-antoine.stagiairesmns.fr:5001/myapp-ci:stable .
      - name: login docker
        run: echo $DOCKER_PASSWORD | docker login https://$DOCKER_REGISTRY_URL/v2/ -u $DOCKER_USERNAME --password-stdin
        continue-on-error: true
      - name: login docker
        run: echo $DOCKER_PASSWORD | docker login https://$DOCKER_REGISTRY_URL/v2/ -u $DOCKER_USERNAME --password-stdin
        continue-on-error: true
      - name: login docker
        run: echo $DOCKER_PASSWORD | docker login https://$DOCKER_REGISTRY_URL/v2/ -u $DOCKER_USERNAME --password-stdin
        continue-on-error: true

    # Envoi de l’image sur le registre privé
      - name: Push Image on Registry
        run: docker push dfs-antoine.stagiairesmns.fr:5001/myapp-ci:stable

